{"version":3,"sources":["../../../projects/sand-simple-select/src/lib/service/sand-simple-select.service.ts","../../../projects/sand-simple-select/src/lib/pipes/filter.pipe.ts","../../../projects/sand-simple-select/src/lib/pipes/highlight.pipe.ts","../../../projects/sand-simple-select/src/lib/pipes/shared.pipe.ts","../../../projects/sand-simple-select/src/lib/sand-simple-select/sand-simple-select.component.html","../../../projects/sand-simple-select/src/lib/sand-simple-select/sand-simple-select.component.ts","../../../projects/sand-simple-select/src/lib/sand-simple-select.module.ts"],"names":["SandSimpleSelectService","factory","ɵfac","providedIn","SelectFilterPipe","prototype","transform","array","column","query","length","filter","s","toLowerCase","includes","pure","HighlightSearch","value","key","regex","RegExp","match","replace","i0.ɵɵelementContainerStart","i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵelementContainerEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵtemplate","i0.ɵɵproperty","i0.ɵɵelementContainer","SharedPipe","providers","imports","declarations","exports","i0","ɵɵpureFunction1","_c0","ctx_r2","noDataText","$event","stopPropagation","ɵɵrestoreView","_r10_1","ɵɵnextContext","searchKey","onSearch","i0.ɵɵelement","SandSimpleSelectComponent","this","noData","dropdowndata","select","EventEmitter","open","close","search","propagateChange","onTouched","ngOnInit","writeValue","registerOnChange","fn","registerOnTouched","showDropdown","showList","emit","event","target","onSelect","data","i","selectLabel","name","clickInsideComponent","clickedInside","clickOutsideComponent","init","focus","blur","selectors","hostBindings","rf","ctx","ɵɵresolveDocument","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","decls","vars","consts","template","i0.ɵɵtextInterpolate1","SandSimpleSelectModule","HttpClientModule","CommonModule","FormsModule"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SandSimpleSelectService {\r\n\r\n  constructor() { }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n@Pipe({\r\n    name: 'selectFilter'\r\n})\r\nexport class SelectFilterPipe implements PipeTransform {\r\n    transform(array: any[], column: string, query: string): any {\r\n        if (array.length !== 0 && query) {\r\n            return array.filter(s => s[column].toLowerCase().includes(query.toLowerCase()));\r\n        }\r\n        return array;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'highlight',\r\n})\r\nexport class HighlightSearch implements PipeTransform {\r\n    transform(value: any[], key:any, query: any): any {\r\n        if (!query) {\r\n            return value;\r\n        }\r\n        const regex = new RegExp(query, 'gi');\r\n        const match = value[key].match(regex);\r\n\r\n        if (!match) {\r\n            return value;\r\n        }\r\n\r\n        return value[key].replace(regex, `<span class='highlight'>${match[0]}</span>`);\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { SelectFilterPipe } from './filter.pipe'\r\nimport { HighlightSearch } from './highlight.pipe';\r\n\r\n\r\n@NgModule({\r\n    exports: [\r\n        SelectFilterPipe,\r\n        HighlightSearch\r\n    ],\r\n    imports: [\r\n        \r\n    ],\r\n    declarations: [\r\n        SelectFilterPipe,\r\n        HighlightSearch\r\n    ],\r\n    providers: [\r\n    ]\r\n})\r\nexport class SharedPipe { }\r\n","<ng-container>\r\n    <div class=\"a-te-dropdown\" (click)=\"showDropdown()\" tabindex=\"-1\" (click)=\"$event.stopPropagation()\">\r\n        <span> {{selectLabel}} <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i></span>\r\n    </div>\r\n    <ng-container *ngIf=\"showList && !disabledropdwon\">\r\n        <div class=\"a-te-dropdownlist shadow\">\r\n            <div class=\"container-wrap\">\r\n                <div class=\"tr-te-search-outer\">\r\n                    <div class=\"tr-te-searchbar\">\r\n                        <input type=\"text\" class=\"form-control\" (click)=\"$event.stopPropagation()\"\r\n                            [(ngModel)]=\"searchKey\" placeholder=\"Search\" (input) =\"onSearch($event)\">\r\n                        <i class=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n                    </div>\r\n                </div>\r\n                <ng-container *ngIf=\"dropdowndata.length !==0\">\r\n                    <div class=\"triggerchoose-list-scroll\">\r\n                        <ng-container *ngFor=\"let field of dropdowndata  | selectFilter: 'name': searchKey; let i = index\" class=\"v-loop\">\r\n                            <ng-container>\r\n                                <div class=\"tr-c-list-item-i\" (click)=\"onSelect(field,i)\">\r\n                                    <div class=\"v-container\">{{field.name}}</div> \r\n                                </div>\r\n                            </ng-container>\r\n\r\n                        </ng-container>\r\n                    </div>\r\n                </ng-container>\r\n\r\n\r\n\r\n                <!--Not found-->\r\n                <ng-container>\r\n                    <div class=\"not-found\" *ngIf=\"noData\">\r\n                        <ng-container *ngTemplateOutlet=\"notFoundTemplate;  context: { $implicit:noDataText  }\">\r\n                        </ng-container>\r\n                    </div>\r\n                </ng-container>\r\n\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</ng-container>","import { Component, EventEmitter, forwardRef, HostListener, Input, OnInit, Output, TemplateRef } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: \"sand-simple-select\",\r\n  templateUrl: \"./sand-simple-select.component.html\",\r\n  styleUrls: [\"./sand-simple-select.component.scss\"],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => SandSimpleSelectComponent),\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class SandSimpleSelectComponent implements OnInit {\r\n  showList: boolean;\r\n  public noData = false;\r\n  clickedInside: boolean;\r\n  searchKey: string='';\r\n\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  /**\r\n  * Custom template for the end user for dropdown\r\n  */\r\n  @Input() itemTemplate !: TemplateRef<any>;\r\n\r\n  /**\r\n   * Custom template for no data found\r\n   */\r\n  @Input() notFoundTemplate !: TemplateRef<any>;\r\n\r\n  /**\r\n * Label for the select\r\n */\r\n  @Input() public selectLabel: boolean;\r\n\r\n  /**\r\n* Label for the select\r\n*/\r\n  @Input() public noDataText: boolean;\r\n\r\n  /**\r\n* Label for the select\r\n*/\r\n  @Input() public disabledropdwon: boolean;\r\n\r\n  /**\r\n * Get the values for the dropdown\r\n */\r\n  @Input() public dropdowndata: any = [];\r\n\r\n  /**\r\n   * Emit event upon selecting a value\r\n  */\r\n  @Output() public select: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n  * Emit event upon selecting a value\r\n */\r\n  @Output() public open: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * Emit event upon selecting a value\r\n  */\r\n  @Output() public close: EventEmitter<any> = new EventEmitter();\r\n\r\n  /**\r\n   * Emit event on searching\r\n   */\r\n  @Output() public search: EventEmitter<any> = new EventEmitter();\r\n\r\n\r\n  /**\r\n  * Propagates new value when model changes\r\n  */\r\n  propagateChange: any = () => {\r\n  }\r\n\r\n  onTouched: any = () => {\r\n  }\r\n  /**\r\n   * Writes a new value from the form model into the view,\r\n   * Updates model\r\n   */\r\n  writeValue(value: any): void {\r\n    if (value) {\r\n      //\r\n    }\r\n  }\r\n  /**\r\n   * Registers a handler that is called when something in the view has changed\r\n   */\r\n  registerOnChange(fn): void {\r\n    this.propagateChange = fn;\r\n\r\n  }\r\n\r\n  /**\r\n   * Registers a handler specifically for when a control receives a touch event\r\n   */\r\n  registerOnTouched(fn: () => void): void {\r\n\r\n  }\r\n\r\n  /**\r\n * Event upon clicking the select button\r\n */\r\n  showDropdown() {\r\n    this.showList = !this.showList;\r\n    if (this.showList) {\r\n      this.open.emit(true)\r\n    } else {\r\n      this.close.emit(true)\r\n    }\r\n    if (this.dropdowndata.length == 0) {\r\n      this.noData = true;\r\n    }\r\n  }\r\n  /**\r\n   * \r\n   * Event on search\r\n   */\r\n  onSearch(event) {\r\n    \r\n    this.search.emit(event.target.value);\r\n  }\r\n  /**\r\n  * Event upon selecting a value\r\n  */\r\n  onSelect(data, i) {\r\n    this.select.emit(data)\r\n    this.propagateChange(data)\r\n    this.showList = false;\r\n    this.selectLabel = data.name;\r\n  }\r\n\r\n  /**\r\n* click listener for host inside this component i.e\r\n* if many instances are there, this detects if clicked inside\r\n* this instance\r\n*/\r\n  @HostListener('click')\r\n  public clickInsideComponent() {\r\n    this.clickedInside = true;\r\n  }\r\n\r\n\r\n  /**\r\n   * click handler on documnent to hide the open dropdown if clicked outside\r\n   */\r\n  @HostListener('document:click')\r\n  public clickOutsideComponent() {\r\n    /* istanbul ignore else */\r\n    if (!this.clickedInside) {\r\n      this.showList = false;\r\n      this.init()\r\n    }\r\n    this.clickedInside = false;\r\n  }\r\n\r\n  @HostListener('focus', ['$event']) public focus(event) {\r\n    this.showList = false;\r\n    this.init()\r\n    \r\n  }\r\n  @HostListener('blur', ['$event']) public blur(event) {\r\n    \r\n    this.showList = false;\r\n    this.init();\r\n  }\r\n\r\n  init(){\r\n    this.searchKey = ''\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { SandSimpleSelectComponent } from './sand-simple-select/sand-simple-select.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SharedPipe } from './pipes/shared.pipe';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [SandSimpleSelectComponent],\r\n  imports: [\r\n    HttpClientModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    SharedPipe\r\n\r\n  ],\r\n  exports: [\r\n    SandSimpleSelectComponent,\r\n    SharedPipe\r\n  ]\r\n})\r\nexport class SandSimpleSelectModule { }\r\n"]}